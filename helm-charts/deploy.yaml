---
# Source: pages/charts/api/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: dev-test
---
# Source: pages/charts/pages/templates/secret.yaml
apiVersion: v1
data:
  password: cGFzc3dvcmQ=
  spring.datasource.password: cGFzc3dvcmQ=
kind: Secret
metadata:
  creationTimestamp: null
  name: mysql
  namespace: dev-test
---
# Source: pages/charts/api/templates/config.yaml
apiVersion: v1
data:
  PAGE_CONTENT: Green-Pages coming from Yellow-World!
kind: ConfigMap
metadata:
  name: pages
  namespace: dev-test
---
# Source: pages/charts/pages/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: dev-test
data:
  spring.datasource.username: root
  V1__inital_schema.sql: |
    USE pages;
    create table pages(
    id bigint(20) not null auto_increment,
    business_name VARCHAR(50),
    address VARCHAR(50),
    category_id bigint(20),
    contact_number VARCHAR(50),
    primary key (id)
    )
    engine = innodb
    default charset = utf8;
---
# Source: pages/charts/pages/templates/storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: database
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
# Source: pages/charts/pages/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-dev-test
  labels:
    type: local
spec:
  storageClassName: database
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/mysql/dev-test"
---
# Source: pages/charts/pages/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-dev-test
  namespace: dev-test
spec:
  storageClassName: database
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: pages/charts/api/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dev-test-cluster-role
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "pods", "configmaps", "endpoints"]
    verbs: ["get", "watch", "list"]
---
# Source: pages/charts/api/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default:dev-test-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dev-test-cluster-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: dev-test
---
# Source: pages/charts/api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pages
    tier: service
  name: pages
  namespace: dev-test
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: pages
    tier: service
  type: NodePort
---
# Source: pages/charts/pages/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: dev-test
  labels:
    app: pages
    tier: database
spec:
  ports:
    - port: 3306
  selector:
    app: pages
    tier: database
  type: ClusterIP
---
# Source: pages/charts/api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pages
    tier: service
  name: pages
  namespace: dev-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pages
      tier: service
  strategy: {}
  template:
    metadata:
      labels:
        app: pages
        tier: service
    spec:
      containers:
        - image: dellcloud/pages:distributed
          name: pages
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 600Mi
              cpu: 0.25
            limits:
              memory: 900Mi
              cpu: 1
          ports:
            - containerPort: 8080
          env:
            - name: PAGE_CONTENT
              valueFrom:
                configMapKeyRef:
                  name: pages
                  key: PAGE_CONTENT
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql/pages?useSSL=false
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: password
            - name: DEBUG
              value: "true"
            - name: LOGGING_FILE_NAME
              value: "dev-test/logs/app.log"
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB
              value: debug
            - name: LOGGING_LEVEL_ROOT
              value: debug
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "*"
          volumeMounts:
            - name: node-dir
              mountPath: /dev-test
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
      volumes:
        - name: node-dir
          hostPath:
            path: /dev-test
---
# Source: pages/charts/pages/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: dev-test
  labels:
    app: pages
    tier: database
spec:
  selector:
    matchLabels:
      app: pages
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pages
        tier: database
    spec:
      containers:
        - image: mysql:8.0
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: password
            - name: MYSQL_SERVICE_HOST
              value: "mysql"
            - name: MYSQL_SERVICE_PORT
              value: "3306"
            - name: MYSQL_DATABASE
              value: "pages"
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc-dev-test
---
# Source: pages/charts/pages/templates/flyway-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: flyway-job
  namespace: dev-test
  labels:
    app: pages
spec:
  template:
    spec:
      containers:
        - name: flyway
          image: flyway/flyway:6.4.4
          args:
            - info
            - migrate
            - info
          env:
            - name: FLYWAY_URL
              value: jdbc:mysql://mysql/pages
            - name: FLYWAY_USER
              value: root
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: password
            - name: FLYWAY_PLACEHOLDER_REPLACEMENT
              value: "true"
            - name: FLYWAY_PLACEHOLDERS_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: mysql
                  key: spring.datasource.username
            - name: FLYWAY_PLACEHOLDERS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: spring.datasource.password
          volumeMounts:
            - mountPath: /flyway/sql
              name: sql
      volumes:
        - name: sql
          configMap:
            name: mysql
      restartPolicy: Never
---
# Source: pages/charts/api/templates/values.yaml
deployment.name: pages-api
deployment.container.name: pages-app

serviceConf:
  - name: targetPort
    value: 8090
  - name: protocol
    value: TCP
